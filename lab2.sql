/* Номeр 1
Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Н_ТИПЫ_ВЕДОМОСТЕЙ, Н_ВЕДОМОСТИ.
Вывести атрибуты: Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД, Н_ВЕДОМОСТИ.ДАТА.
Фильтры (AND):
a) Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ > Экзаменационный лист.
b) Н_ВЕДОМОСТИ.ИД = 1426978.
Вид соединения: RIGHT JOIN.
*/

SELECT
    Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД,
    Н_ВЕДОМОСТИ.ДАТА
FROM
    Н_ТИПЫ_ВЕДОМОСТЕЙ
RIGHT JOIN
    Н_ВЕДОМОСТИ
ON
    Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД = Н_ВЕДОМОСТИ.ВЕД_ИД
    AND Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ > 'Экзаменационный лист'
WHERE
    Н_ВЕДОМОСТИ.ИД = 1426978;





/* Номeр 2
Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_ОБУЧЕНИЯ.НЗК, Н_УЧЕНИКИ.ГРУППА.
Фильтры: (AND)
a) Н_ЛЮДИ.ИД < 163484.
b) Н_ОБУЧЕНИЯ.ЧЛВК_ИД = 112514.
c) Н_УЧЕНИКИ.ГРУППА = 1101.
Вид соединения: INNER JOIN.

Выводит 0 -> Нужно убрать группу*/

SELECT
    Н_ЛЮДИ.ОТЧЕСТВО,
    Н_ОБУЧЕНИЯ.НЗК,
    Н_УЧЕНИКИ.ГРУППА
FROM
    Н_ЛЮДИ
INNER JOIN Н_ОБУЧЕНИЯ ON Н_ЛЮДИ.ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД
INNER JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE
    Н_ЛЮДИ.ИД < 163484
    AND Н_ОБУЧЕНИЯ.ЧЛВК_ИД = 112514
    AND Н_УЧЕНИКИ.ГРУППА = '1101';



/* Номeр 3
Вывести число фамилий без учета повторений.
При составлении запроса нельзя использовать DISTINCT.
*/
SELECT COUNT(*)
FROM (
    SELECT ФАМИЛИЯ
    FROM Н_ЛЮДИ
    GROUP BY ФАМИЛИЯ
) AS ОТВЕТ;



/* Номeр 4
В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается (обучалось) ровно 2 групп на заочной форме обучения.
Для реализации использовать подзапрос.

Выводит 0 -> Нужно поменять форму на очную
*/
SELECT u.ПЛАН_ИД, u.ГРУППА, COUNT(*) AS кол_учеников
FROM Н_УЧЕНИКИ u
JOIN Н_ПЛАНЫ p ON u.ПЛАН_ИД = p.ИД
WHERE p.ФО_ИД = 3
GROUP BY u.ПЛАН_ИД, u.ГРУППА
ORDER BY u.ПЛАН_ИД, u.ГРУППА;




/* Номeр 5
Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), у которых средняя оценка меньше максимальной оценк(е|и) в группе 1100.
*/

WITH MAX_OCENKA_1100 AS (
    SELECT MAX(в.ОЦЕНКА::numeric) AS Макс_оценка
    FROM Н_ВЕДОМОСТИ в
    JOIN Н_УЧЕНИКИ уч ON уч.ЧЛВК_ИД = в.ЧЛВК_ИД
    WHERE уч.ГРУППА = '1100'
      AND в.ОЦЕНКА IN ('2', '3', '4', '5')
)

SELECT
    уч.ИД,
    AVG(в.ОЦЕНКА::numeric) AS Ср_оценка
FROM Н_УЧЕНИКИ уч
JOIN Н_ВЕДОМОСТИ в ON в.ЧЛВК_ИД = уч.ЧЛВК_ИД
WHERE уч.ГРУППА = '4100'
  AND в.ОЦЕНКА IN ('2', '3', '4', '5')
GROUP BY уч.ИД
HAVING AVG(в.ОЦЕНКА::numeric) < (SELECT Макс_оценка FROM MAX_OCENKA_1100)
ORDER BY Ср_оценка DESC;









/* Номeр 6
Получить список студентов, зачисленных после первого сентября 2012 года на первый курс заочной формы обучения. В результат включить:
номер группы;
номер, фамилию, имя и отчество студента;
номер и состояние пункта приказа;
Для реализации использовать подзапрос с EXISTS.

Выводит 0 -> Нужно поменять форму на очную и дату так как
SELECT *
FROM Н_УЧЕНИКИ
WHERE НАЧАЛО >= DATE '2012-01-01';
*/
SELECT
    уч.ГРУППА,
    уч.ИД,
    л.ФАМИЛИЯ,
    л.ИМЯ,
    л.ОТЧЕСТВО,
    уч.П_ПРКОК_ИД,
    уч.СОСТОЯНИЕ
FROM Н_УЧЕНИКИ уч
JOIN Н_ЛЮДИ л ON л.ИД = уч.ЧЛВК_ИД
JOIN Н_ПЛАНЫ п ON уч.ПЛАН_ИД = п.ИД
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ фо ON п.ФО_ИД = фо.ИД
WHERE п.КУРС = 1
  AND фо.НАИМЕНОВАНИЕ = 'Заочная'
  AND уч.НАЧАЛО > DATE '2012-09-01'
  AND EXISTS (
    SELECT 1
    FROM Н_УЧЕНИКИ уч2
    WHERE уч2.ИД = уч.ИД
      AND уч2.СОСТОЯНИЕ = 'утвержден'
  )
ORDER BY уч.ГРУППА, уч.ИД;








/* Номeр 7
Вывести список студентов, имеющих одинаковые фамилии, но не совпадающие даты рождения.
*/
SELECT н1.ИД, н1.ФАМИЛИЯ, н1.ИМЯ, н1.ОТЧЕСТВО, н1.ДАТА_РОЖДЕНИЯ
FROM Н_ЛЮДИ н1 
WHERE EXISTS (
    SELECT 1
    FROM Н_ЛЮДИ н2 
    WHERE н2.ФАМИЛИЯ = н1.ФАМИЛИЯ 
      AND н2.ДАТА_РОЖДЕНИЯ <> н1.ДАТА_РОЖДЕНИЯ 
)
ORDER BY н1.ФАМИЛИЯ, н1.ДАТА_РОЖДЕНИЯ;
